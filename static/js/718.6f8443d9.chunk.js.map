{"version":3,"file":"static/js/718.6f8443d9.chunk.js","mappings":"0LACA,EAAuB,uBAAvB,EAAqD,uB,SC+BpD,EA5BiB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,yBACE,SAAC,KAAD,CACEJ,UAAWC,EACXI,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMT,GAHjB,UAKE,uBAAIK,OANCC,EADA,KAahB,C,iGCrBD,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAuH,oCAAvH,EAAkP,mC,SC0ClP,EAvCkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAenB,OACE,mBAAQR,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAgBO,SAhBhB,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASC,KAAKC,MAEhC,GAAoB,KAAhBH,EAAKI,OACP,OAAOC,MAAM,wBAEfV,EAASK,GAETF,EAAKQ,OACN,EAIG,WACE,mBAAQnB,UAAWC,EAAsBmB,KAAK,SAA9C,UACE,wCAGF,kBACEpB,UAAWC,EACXmB,KAAK,OACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBAKrB,E,QCeD,EA7Ce,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMZ,EAAOU,EAAaG,IAAI,SACjB,OAATb,GAAeM,EAAeN,EACnC,GAAE,CAACU,IA0BJ,OAnBAE,EAAAA,EAAAA,YAAU,WAURE,MAAM,mDAAD,OACgDT,EADhD,8CATW,CACdU,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIZ,EAAcY,EAASE,QAA3B,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACnB,KAGF,6BAEI,SAAC,EAAD,CAAWlB,SA3BK,SAAAkB,GACpBC,EAAeD,GACfM,EAAgB,CAAEgB,MAAOtB,GAC1B,KAyBK,SAACuB,EAAA,EAAD,CAAUpD,MAAO+B,EAAjB,iBAIP,C","sources":["webpack://react-homework-template/./src/components/FIlmList/FilmList.module.css?4d7c","components/FIlmList/FilmList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"FilmList_list__RqTEi\",\"item\":\"FilmList_item__Icmze\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './FilmList.module.css';\nimport PropTypes from 'prop-types';\n\n const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {films.map(({ title, id }) => (\n        <li key={id}>\n          <Link\n            className={css.item}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <p>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n export default FilmList\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__TReRe\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\",\"SearchForm-input\":\"Searchbar_SearchForm-input__LYSn6\"};","import React from 'react';\nimport css from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const item = form.elements.text.value;\n\n    if (item.trim() === '') {\n      return alert('Enter a search query');\n    }\n    onSubmit(item);\n\n    form.reset();\n  };\n\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button className={css.SearchFormButton} type=\"submit\">\n          <span>Search</span>\n        </button>\n\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          name=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","//import { lazy, Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/Searchbar/Searchbar';\nimport FilmList from 'components/FIlmList/FilmList';\n\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchFilm, setSearchFilm] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const name = searchParams.get('query');\n    if (name !== null) setSearchQuery(name);\n  }, [searchParams]);\n\n  const handlerSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setSearchParams({ query: searchQuery });\n  };\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjODhiZjEzNWFhNGUwYjc5YjdjNjg4MzViZDc3NTk5YyIsInN1YiI6IjY0MzY3Y2IwOTQ1ZDM2MDEyNThhOGViNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.l0uX6X8nk7JVIoTKrSS00KxXQjcoXQ2Z1FOCZWkxi6A',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=1`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => setSearchFilm(response.results))\n      .catch(err => console.error(err));\n  }, [searchQuery]);\n\n  return (\n    <main>\n\n        <SearchBar onSubmit={handlerSubmit} />\n        <FilmList films={searchFilm}> </FilmList>\n     \n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["films","location","useLocation","className","css","map","title","id","to","state","from","onSubmit","e","preventDefault","form","currentTarget","item","elements","text","value","trim","alert","reset","type","name","autoComplete","autoFocus","placeholder","useState","searchQuery","setSearchQuery","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","useEffect","get","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","query","FilmList"],"sourceRoot":""}